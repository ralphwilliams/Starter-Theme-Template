@import 'variables.scss';
// 
//  Table of Contents
//
//   1.0     Colors
//     1.1     Default Colors
//     1.2     Standard Colors
//   2.0     Fonts
//   3.0     Mixins
//   4.0     Basic Layout
//   5.0     Fonts
//     5.1     Headers
//     5.2     Basic Content
//   6.0     Buttons
//   7.0     Tables
//   8.0     Form
//   9.0     Side Navigation
//  10.0     Style Guide Layout
//


/*#region 1.0 Colors */

	/*#region 1.1 Default Colors */

    // See Variables.scss

	/*#endregion*/



.alerts {
	padding:15px;
	border-radius:5px;

	@mixin setColor($bgColor){
		background-color:$bgColor;
		//.textvsBg($bgColor);
	}
	&.notification	{@include setColor(fade($blue, 30%))}
	&.warning		{@include setColor(fade($yellow, 30%))}
	&.error			{@include setColor(fade($red, 30%))}
	&.success		{@include setColor(fade($green, 30%))}
}
//textvsBg	

	/*#endregion*/

/*#endregion*/


/*#region 2.0 Fonts */

    // See Variables.scss

/*#endregion*/


/*#region 3.0 Mixins */

    // clear-fix mixin can be called in the element you wish to apply a clear-fix without having to apply a class to the element in HTML
    @mixin clear-fix() {
      zoom: 1;
      &:before { content: ''; display: block; }
      &:after { content: ''; display: table; clear: both; }
    }

    // creates a mixin to easily apply font family to elements
    @mixin sans-serif-font(){ font-family:$sansSerifFont;}
    @mixin serif-font(){ font-family:$sansSerifFont;}

    // simple mixins to simplify changing display to block or display-block
    @mixin block(){ display:block;}
    @mixin inline-block(){ display:inline-block;}

    // list-menu mixin converts an unordered (or ordered) list into block elements for use on menus
    @mixin list-menu() {
        margin:0;
        padding:0;
        li {
            @include block();
            list-style: none;
            margin: 0;
            padding:0;
            a{@include block();}
        }
    }

    // textvsBg is a function that tests background color passed into mixin to switch font color for readability (treat it as an if statement)
    @function textvsBg($testColor){
        @if lightness($testColor) >= $colorVariance {
            @return $textColor;
        } @else {
            @return $white;
        }
    }

/*#endregion*/


/*#region 4.0 Basic Layout */

// Bootstrap override for DNN Control Bar

#ControlBar_ControlPanel,
.actionMenu,
.dnnForm {
	*{
		&,&:after,&:before{
			-moz-box-sizing: content-box !important;
			-webkit-box-sizing: content-box !important;
			box-sizing: content-box !important;
		}
	}
    .mark {
        background-color: transparent;
    }
    input {
        line-height: normal;
    }
}


//.clear-fix   {.clear-fix;}
@mixin right () { float:right;}
.right          { @include right();}
.img-right      { @include right(); padding-left:10px;}
@mixin left ()  { float:left;}
.left           { @include left();}
.img-left       { @include left(); padding-right:10px;}

/*#endregion*/


/*#region 5.0 Fonts */

body,
.Normal,
.normal{
    @include sans-serif-font();
    font-size:$font-size;
    line-height:($font-size * 1.4); // 140%
}
strong,
.NormalBold{
    font-weight:700;
}
.NormalRed{
    color:$red;
}
.Normal{
	ul,
    ol{
        margin:0;
        padding:0;
        li{
            margin:0;
            padding:0;
        }
	}
}



	/*#region 5.1 Headers */
	// headers mixin creates basic styles used on all headers. Passes in the font size.
	@mixin headers($headerFontSize){
		@include serif-font;
		font-size:$headerFontSize;
		font-weight:normal;
		line-height:($headerFontSize);
		margin:0;
		padding:0 0 ($headerFontSize / 2) 0;
		text-transform:uppercase;
	}
	h1 {
		&, &.head { @include headers(60px);}
	}
	h2 {
		&, &.head { @include headers(44px);}
	}
	h3 {
		&, &.head { @include headers(36px);}
	}
	h4 {
		&, &.head { @include headers(30px);}
	}
	h5 {
		&, &.head { @include headers(24px);}
	}
	h6 {
		&, &.head { @include headers(18px);}
	}

	/*#endregion*/

	// DNN Overrides
	.SubHead{}
	.SubSubHead{}

	/*#region 5.2 Basic Content */

	p { 
		@include sans-serif-font();
		padding-bottom:0;
		margin-bottom:20px;
	}
	a { color:$primaryColor;
		&:visited{
			color:lighten($primaryColor,5);
		}
		&:hover{
			color:darken($primaryColor,20);
		}
		&:active{
			color:greyscale($primaryColor);
		}
	}
	.CommandButton{

	}

	/*#endregion*/

/*#endregion*/


/*#region 6.0 Buttons */

@mixin button($textColor, $bgColor:$tertiaryColor, $disabledColor:$tertiaryColor80, $bdRadius:5px){
    $bdColor:darken($bgColor, 10);
    @include inline-block();
    background:$bgColor;
    background-color:$bgColor;
    border:1px solid $bdColor;
    border-radius:$bdRadius;
    color:$textColor;
    cursor:pointer;
    font-size:14px;
    font-weight:normal;
    padding:5px 10px;
    margin:0 0 5px;
    text-decoration:none;
    text-shadow: none;
    outline: none;
    box-shadow: none;
    &:hover{
        background: darken($bgColor, 10);
        background-color: darken($bgColor, 10);
        border-color: darken($bdColor, 10);
        color:$textColor;
    }
    &.disabled,
    &:disabled{
        cursor:default;
        color:$textColor;
        background-color: $disabledColor;
        // border-color:darken($disabledColor,10);
    }
    &:visited{color:$textColor;}
}
button,
.btn,
.dnnPrimaryAction, 
.dnnFormItem input[type="submit"], 
a.dnnPrimaryAction {
    @include button(#FFF, $primaryColor, $primaryColor80, 0px);
}
button.secondary,
.btn-secondary,
.dnnFormItem button, 
.dnnFormItem input[type="button"], 
.dnnFormItem input[type="reset"], 
.dnnSecondaryAction, 
a.dnnSecondaryAction {
    @include button(#FFF, $secondaryColor, $secondaryColor80, 0px);
}
button.tertiary,
.btn-tertiary{
    @include button($textColor, $tertiaryColor, $tertiaryColor80, 0px);
}

/*#endregion*/


/*#region 7.0 Table */
table {
    width: 100%;
    td,th{
        line-height:30px;
        padding:0 5px;
        border:1px solid $tertiaryColor;
    }
    tbody {
        tr {
            &:nth-child(even) {
                background-color: $tertiaryColor40;
            }
        }
    }
    thead{
        tr{
            background-color:$tertiaryColor;
        }
    }
}

/*#endregion*/


/*#region 8.0 Form*/

fieldset{
    legend{
        border-color:$tertiaryColor;
    }
}
label{
    @include block();
    font-weight:normal;
}
input,
select,
.NormalTextbox{
    border:1px solid $tertiaryColor;
    padding:3px 8px;
}
input.required{
    border-left:3px solid $red;
}

/*#endregion*/


/*#region 9.0 Side Navigation */
.side-nav{
    @include list-menu();
	margin-bottom:20px;
    li{
        background-color:$tertiaryColor;
        border-bottom:1px solid $white;
        a{
            padding:10px 15px;
            text-transform:uppercase;
        }
        &.active{
            background-color:$primaryColor;
            a{
                color:$white;
                &:hover{
                    text-decoration:none;
                }
            }
        }
		.dropdown-menu{
			border-radius:0;
			box-shadow:none;
			float:none;
			padding:0;
			position:relative;
			li{
				background-color:#dcdcdc;
			}
		}
    }
}

/*#endregion*/


/*#region 10.0 Style Guide Layout - Used for style guide layout only */

// Color Blocks
@mixin color-samples{
    @include list-menu;
    width:100%;
    margin-left:-65px;
    li{
        $sqaure:130px;
        $padding:$sqaure / 2;
        @include left();
        height:$sqaure - (2 * $padding);
        margin:0 10px 10px;
        text-align:center;
        padding:($padding - $font-size) 0 $padding;
        width:$sqaure;
        &.title{
            height:20px;
        }
        @mixin block-colors($bgColor, $hexText){
            background-color:$bgColor;
            // border:1px solid darken($bgColor, 10);
            color: textvsBg($bgColor); //
            &:before{
                content: $hexText;
            }
        }
        &.default-text{     @include block-colors($textColor, "$textColor");}
        &.default-text-80{  @include block-colors($textColor80, "$textColor80");}
        &.default-text-60{  @include block-colors($textColor40, "$textColor40");}
        &.primary{          @include block-colors($primaryColor, "$primaryColor");}
        &.primary-80{       @include block-colors($primaryColor80, "$primaryColor80");}
        &.primary-60{       @include block-colors($primaryColor40, "$primaryColor40");}
        &.secondary{        @include block-colors($secondaryColor, "$secondaryColor");}
        &.secondary-80{     @include block-colors($secondaryColor80, "$secondaryColor80");}
        &.secondary-60{     @include block-colors($secondaryColor40, "$secondaryColor40");}
        &.tertiary{         @include block-colors($tertiaryColor, "$tertiaryColor");}
        &.tertiary-80{      @include block-colors($tertiaryColor80, "$tertiaryColor80");}
        &.tertiary-60{      @include block-colors($tertiaryColor40, "$tertiaryColor40");}
    }
}
.color-samples {
    @include color-samples();
}


// form
.button-wrap{
    margin-top:15px;
}

/*#endregion*/